/* app/globals.css */
@import "tailwindcss";

/* -----------------------------
   Design Tokens (Tailwind v4)
   ----------------------------- */
@theme {
  /* Brand / custom colors */
  --color-black: #000;                  /* bg-black, text-black */
  --color-black-100: #000319;
  --color-black-200: rgba(17, 25, 40, 0.75);
  --color-black-300: rgba(255, 255, 255, 0.125);

  --color-white: #fff;
  --color-white-100: #bec1dd;
  --color-white-200: #c1c2d3;

  --color-blue-100: #e4ecff;
  --color-purple: #cbacf9;

  /* Semantic colors (resolve HSL vars you define below) */
  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));
}

/* --------------------------------
   Base CSS variables (light/dark)
   -------------------------------- */
@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;

    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;

    --primary: 240 5.9% 10%;
    --primary-foreground: 0 0% 98%;

    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;

    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;

    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;

    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 240 10% 3.9%;

    --radius: 0.5rem; /* used below to map rounded-* */
  }

  .dark {
    --background: 240 10% 3.9%;
    --foreground: 0 0% 98%;

    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;

    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;

    --primary: 0 0% 98%;
    --primary-foreground: 240 5.9% 10%;

    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;

    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;

    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;

    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 240 4.9% 83.9%;
  }
}

/* -----------------------------
   Tailwind layers & base styles
   ----------------------------- */
@layer base {

  body {
    @apply bg-background text-foreground;
  }

  button {
    @apply active:outline-none;
  }
}

/* -----------------------------
   Utilities you had before
   ----------------------------- */
@layer utilities {
  .heading {
    @apply font-bold text-4xl md:text-5xl text-center;
  }

  .black-gradient {
    background: linear-gradient(90deg, #161a31 0%, #06091f 100%);
  }
}

/* ------------------------------------
   Border radius mapping (v3 â†’ v4 style)
   ------------------------------------ */
@layer utilities {
  .rounded-lg { border-radius: var(--radius); }
  .rounded-md { border-radius: calc(var(--radius) - 2px); }
  .rounded-sm { border-radius: calc(var(--radius) - 4px); }
}

/* -----------------------------
   Keyframes (ported from config)
   ----------------------------- */
@keyframes accordion-down {
  from { height: 0 }
  to   { height: var(--radix-accordion-content-height) }
}
@keyframes accordion-up {
  from { height: var(--radix-accordion-content-height) }
  to   { height: 0 }
}
@keyframes spotlight {
  0%   { opacity: 0; transform: translate(-72%, -62%) scale(0.5) }
  100% { opacity: 1; transform: translate(-50%, -40%) scale(1) }
}
@keyframes shimmer {
  from { background-position: 0 0 }
  to   { background-position: -200% 0 }
}
@keyframes moveHorizontal {
  0%   { transform: translateX(-50%) translateY(-10%) }
  50%  { transform: translateX( 50%) translateY( 10%) }
  100% { transform: translateX(-50%) translateY(-10%) }
}
@keyframes moveInCircle {
  0%   { transform: rotate(0deg) }
  50%  { transform: rotate(180deg) }
  100% { transform: rotate(360deg) }
}
@keyframes moveVertical {
  0%   { transform: translateY(-50%) }
  50%  { transform: translateY( 50%) }
  100% { transform: translateY(-50%) }
}
@keyframes scroll {
  to { transform: translate(calc(-50% - 0.5rem)) }
}

/* -----------------------------
   Animation utilities (v4 CSS)
   ----------------------------- */
@layer utilities {
  .animate-accordion-down { animation: accordion-down 0.2s ease-out }
  .animate-accordion-up   { animation: accordion-up   0.2s ease-out }
  .animate-spotlight      { animation: spotlight 2s ease .75s 1 forwards }
  .animate-shimmer        { animation: shimmer 2s linear infinite }
  .animate-first          { animation: moveVertical 30s ease infinite }
  .animate-second         { animation: moveInCircle 20s reverse infinite }
  .animate-third          { animation: moveInCircle 40s linear infinite }
  .animate-fourth         { animation: moveHorizontal 40s ease infinite }
  .animate-fifth          { animation: moveInCircle 20s ease infinite }
  .animate-scroll         { animation: scroll var(--animation-duration, 40s) var(--animation-direction, forwards) linear infinite }
}

/* -------------------------------------------------
   Pattern backgrounds (no plugin; color with text-*)
   Usage: class="text-gray-300 bg-grid" etc.
   ------------------------------------------------- */
@layer utilities {
  .bg-grid {
    background-image: url("data:image/svg+xml;utf8,\
<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='100' height='100' fill='none' stroke='currentColor'>\
<path d='M0 .5H31.5V32'/>\
</svg>");
    background-size: 100px 100px;
  }
  .bg-grid-small {
    background-image: url("data:image/svg+xml;utf8,\
<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='8' height='8' fill='none' stroke='currentColor'>\
<path d='M0 .5H31.5V32'/>\
</svg>");
    background-size: 8px 8px;
  }
  .bg-dot {
    background-image: url("data:image/svg+xml;utf8,\
<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='16' height='16' fill='none'>\
<circle fill='currentColor' cx='10' cy='10' r='1.6257413380501518'/>\
</svg>");
    background-size: 16px 16px;
  }
}

/* -------------------------------------
   Keep Tailwind layers active (v4 style)
   ------------------------------------- */
@layer base { }
@layer components { }
@layer utilities { }
